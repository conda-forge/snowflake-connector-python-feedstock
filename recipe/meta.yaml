{% set name = "snowflake-connector-python" %}
{% set version = "2.4.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: fa301f5306a87d633911fd6493800401b04cfd4112f3f6732dde1025f90442c3


build:
  number: 0
  script:
    - export SF_NO_COPY_ARROW_LIB=1              # [unix]
    - export SF_ARROW_LIBDIR="${PREFIX}/lib"     # [unix]
    - export ENABLE_EXT_MODULES=true             # [unix]
    - set SF_NO_COPY_ARROW_LIB=1                 # [win]
    - set "SF_ARROW_LIBDIR=%LIBRARY_LIB%"        # [win]
    - set ENABLE_EXT_MODULES=1                   # [win]
    - {{ PYTHON }} -m pip install . --no-deps -vvv
  entry_points:
    - snowflake-dump-ocsp-response = snowflake.connector.tool.dump_ocsp_response:main
    - snowflake-dump-ocsp-response-cache = snowflake.connector.tool.dump_ocsp_response_cache:main
    - snowflake-dump-certs = snowflake.connector.tool.dump_certs:main
    - snowflake-export-certs = snowflake.connector.tool.export_certs:main

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    - cython
    - arrow-cpp 3
    - pyarrow 3
    - numpy
  run:
    - python
    - {{ pin_compatible('pyarrow', max_pin='x') }}
    - azure-common <2
    - azure-storage-blob >=12.0.0,<13.0.0
    - boto3 >=1.4.4,<2.0.0
    # While requests is vendored, we use regular requests to perform OCSP checks
    - requests <3.0.0
    - certifi <2021.0.0
    - pytz <2021.0
    - pycryptodomex >=3.2,!=3.5.0,<4.0.0
    - pyOpenSSL >=16.2.0,<20.0.0
    - cffi >=1.9,<2.0.0
    - cryptography >=2.5.0,<4.0.0
    - pyjwt <3.0.0
    - oscrypto <2.0.0
    - asn1crypto >0.24.0,<2.0.0
    # A functioning pkg_resources.working_set.by_key and pkg_resources.Requirement is
    # required. Python 3.6 was released at the end of 2016. setuptools 34.0.0 was released
    # in early 2017, so we pick this version as a reasonably modern base.
    - setuptools >34.0.0
    # requests requirements
    - chardet >=3.0.2,<4
    - idna >=2.5,<3
    - certifi >=2017.4.17
    - dataclasses  # [py<37]
  run_constrained:
    - pandas >1,<1.2

test:
  requires:
    - pip
  imports:
    - snowflake
    - snowflake.connector
    - snowflake.connector.arrow_result  # [unix]
  commands:
    - pip check

about:
  home: https://github.com/snowflakedb/snowflake-connector-python
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE.txt
  summary: Snowflake Connector for Python
  description: |
    The Snowflake Connector for Python provides an interface for
    developing Python applications that can connect to Snowflake
    and perform all standard operations. It provides a programming
    alternative to developing applications in Java or C/C++ using
    the Snowflake JDBC or ODBC drivers.
  doc_url: https://docs.snowflake.net/manuals/user-guide/python-connector.html
  dev_url: https://github.com/snowflakedb/snowflake-connector-python

extra:
  recipe-maintainers:
    - hajapy
    - talues
    - xhochy
    - mariusvniekerk
